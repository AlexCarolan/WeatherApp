{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.apiUrl = \"https://example-be.com/\";\n  }\n  getAuth() {\n    return this.http.get(this.apiUrl + 'generate/open/jwt', this.httpOptions);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","httpOptions","headers","apiUrl","getAuth","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/alexcarolan/Documents/repos/WeatherApp/weather-app/src/app/services/api-service/api-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  private apiUrl: string = \"https://example-be.com/\";\n\n  constructor(private http: HttpClient) { }\n\n  public getAuth(): Observable<any> {\n    return this.http\n      .get<any>(this.apiUrl + 'generate/open/jwt', this.httpOptions);\n  }\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAUrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAEO,KAAAM,MAAM,GAAW,yBAAyB;EAEV;EAEjCC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CACbK,GAAG,CAAM,IAAI,CAACF,MAAM,GAAG,mBAAmB,EAAE,IAAI,CAACF,WAAW,CAAC;EAClE;;AAfWH,UAAU,C;mBAAVA,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVX,UAAU,C;SAAVA,UAAU;EAAAY,OAAA,EAAVZ,UAAU,CAAAa,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}